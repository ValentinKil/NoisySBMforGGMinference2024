usethis::use_r(name = "algoICL_init")
usethis::use_r(name = "algoICL_merge")
usethis::use_r(name = "algoICL")
usethis::use_r(name = "auxiliaryFunctions")
usethis::use_r(name = "DeltaNSBM")
usethis::use_r(name = "ICL_calcul")
usethis::use_r(name = "Main")
usethis::use_r(name = "noisysbmGGM-package.R")
usethis::use_r(name = "RcppExports")
rename("noisysbmGGM-package.R","noisysbmGGM-package")
usethis::rename("noisysbmGGM-package.R","noisysbmGGM-package")
usethis::rename_files("noisysbmGGM-package.R","noisysbmGGM-package")
load("~/Downloads/noisySBM2_0.2.7/data/GGMtest.rda")
load("~/Downloads/noisySBM2_0.2.7/data/NSBMtest.rda")
load("~/Downloads/noisySBM2_0.2.7/R/Sachs/Sachs.Rdata")
usethis::use_data(GGMtest)
usethis::use_data(NSBMtest)
usethis::use_r(name = "Data")
usethis::use_r(name = "zTransform")
usethis::use_c(name="convertNodePair")
usethis::use_cpp(name="Delta_Orange_5")
usethis::use_cpp11(name="convertNodePair")
usethis::use_cpp11(name="convertNodePair")
usethis::use_rcpp(name="convertNodePair")
usethis::use_rcpp(name="Delta_Orange_5")
usethis::use_rcpp(name="Delta_SBM_2")
usethis::use_rcpp(name="Delta")
usethis::use_rcpp(name="I_kl")
usethis::use_package_doc()
usethis:::use_vignette(name="UserGuide")
devtools::document()
usethis::use_package_doc()
usethis::use_package_doc()
usethis::use_package_doc()
usethis::use_package_doc()
usethis::use_package_doc()
devtools::document()
rlang::last_trace()
devtools::document()
usethis::use_package_doc()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::build_vignettes()
knitr::opts_chunk$set(echo = TRUE)
library(noisysbmGGM)
theta <- list(pi=NULL, w=NULL, nu0=NULL, nu=NULL)
Q <- 2
theta$pi <- c(2,1)/3
theta$w <-c(.8,.1,.9)
theta$nu0 <- c(0,1)
theta$nu <- array(0, dim = c(Q*(Q+1)/2, 2))
theta$nu[,1] <- c(4,4,4)
theta$nu[,2]<-c(1,1,1)
theta$nu
p=10
obs <- rnsbm(p, theta)
round(obs$dataMatrix, digits = 2)
obs$latentAdj
obs$latentZ
library(igraph)
G=igraph::graph_from_adjacency_matrix(obs$latentAdj)
igraph::plot.igraph(G, vertex.size=5, vertex.dist=4, vertex.label=NA, vertex.color=obs$latentZ, edge.arrow.mode=0)
plotGraphs(obs$dataMatrix, binaryTruth=obs$latentAdj)
p=30
obs <- rnsbm(p, theta)
X=obs$dataMatrix
res1 <- main_noisySBM(X, Qup=10, alpha=0.1)
res1$theta
res1$Z
res1$Q
res1$A
plotGraphs(dataMatrix= X, binaryTruth=obs$latentAdj, inferredGraph= res1$A)
ARI(res1$Z, obs$latentZ)
res2 <- main_noisySBM(X,NIG=TRUE, Qup=10, alpha=0.1)
res2$Q
res2$Z
res2$theta
ARI(res2$Z, obs$latentZ)
plotGraphs(dataMatrix= X, binaryTruth=obs$latentAdj, inferredGraph= res2$A)
c("Ren","Jankova_NW","Jankova_GL","Liu_SL","Liu_L","zTransform")
X=GGMtest$dataMatrix
resGGM <- main_noisySBM_GGM(X,Meth="Ren",NIG=FALSE, Qup=10, alpha=0.1)
resGGM$A
Gggm=igraph::graph_from_adjacency_matrix(resGGM$A)
igraph::plot.igraph(Gggm, vertex.size=5, vertex.dist=4, vertex.label=NA, edge.arrow.mode=0)
devtools::build_vignettes()
X=obs$dataMatrix
## ----setup, include=FALSE-----------------------------------------------------
knitr::opts_chunk$set(echo = TRUE)
## -----------------------------------------------------------------------------
library(noisysbmGGM)
## -----------------------------------------------------------------------------
theta <- list(pi=NULL, w=NULL, nu0=NULL, nu=NULL)
## -----------------------------------------------------------------------------
Q <- 2
## -----------------------------------------------------------------------------
theta$pi <- c(2,1)/3
## -----------------------------------------------------------------------------
theta$w <-c(.8,.1,.9)
## -----------------------------------------------------------------------------
theta$nu0 <- c(0,1)
## -----------------------------------------------------------------------------
theta$nu <- array(0, dim = c(Q*(Q+1)/2, 2))
theta$nu[,1] <- c(4,4,4)
theta$nu[,2]<-c(1,1,1)
theta$nu
## -----------------------------------------------------------------------------
p=10
obs <- rnsbm(p, theta)
## -----------------------------------------------------------------------------
round(obs$dataMatrix, digits = 2)
## -----------------------------------------------------------------------------
obs$latentAdj
## -----------------------------------------------------------------------------
obs$latentZ
## -----------------------------------------------------------------------------
library(igraph)
G=igraph::graph_from_adjacency_matrix(obs$latentAdj)
igraph::plot.igraph(G, vertex.size=5, vertex.dist=4, vertex.label=NA, vertex.color=obs$latentZ, edge.arrow.mode=0)
## -----------------------------------------------------------------------------
plotGraphs(obs$dataMatrix, binaryTruth=obs$latentAdj)
## -----------------------------------------------------------------------------
p=30
obs <- rnsbm(p, theta)
X=obs$dataMatrix
devtools::build_vignettes()
$stdout
p=30
obs <- rnsbm(p, theta)
devtools::build_vignettes()
$stdout
$stderr
devtools::build_vignettes()
knitr::opts_chunk$set(echo = TRUE)
library(noisysbmGGM)
theta <- list(pi=NULL, w=NULL, nu0=NULL, nu=NULL)
Q <- 2
theta$pi <- c(2,1)/3
theta$w <-c(.8,.1,.9)
theta$nu0 <- c(0,1)
theta$nu <- array(0, dim = c(Q*(Q+1)/2, 2))
theta$nu[,1] <- c(4,4,4)
theta$nu[,2]<-c(1,1,1)
theta$nu
p=10
obs <- rnsbm(p, theta)
round(obs$dataMatrix, digits = 2)
obs$latentAdj
obs$latentZ
library(igraph)
G=igraph::graph_from_adjacency_matrix(obs$latentAdj)
igraph::plot.igraph(G, vertex.size=5, vertex.dist=4, vertex.label=NA, vertex.color=obs$latentZ, edge.arrow.mode=0)
plotGraphs(obs$dataMatrix, binaryTruth=obs$latentAdj)
p=30
obs <- rnsbm(p, theta)
X=obs$dataMatrix
res1 <- main_noisySBM(X, Qup=10, alpha=0.1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
usethis::use_rcpp()
devtools::document()
devtools::build()
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
devtools::build()
stdout
$stdout
devtools::build()
knitr::opts_chunk$set(echo = TRUE)
library(noisysbmGGM)
theta <- list(pi=NULL, w=NULL, nu0=NULL, nu=NULL)
Q <- 2
theta$pi <- c(2,1)/3
theta$w <-c(.8,.1,.9)
theta$nu0 <- c(0,1)
theta$nu <- array(0, dim = c(Q*(Q+1)/2, 2))
theta$nu[,1] <- c(4,4,4)
theta$nu[,2]<-c(1,1,1)
theta$nu
p=10
obs <- rnsbm(p, theta)
round(obs$dataMatrix, digits = 2)
obs$latentAdj
obs$latentZ
library(igraph)
G=igraph::graph_from_adjacency_matrix(obs$latentAdj)
igraph::plot.igraph(G, vertex.size=5, vertex.dist=4, vertex.label=NA, vertex.color=obs$latentZ, edge.arrow.mode=0)
plotGraphs(obs$dataMatrix, binaryTruth=obs$latentAdj)
p=30
obs <- rnsbm(p, theta)
X=obs$dataMatrix
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
devtools::build()
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
devtools::build()
knitr::opts_chunk$set(echo = TRUE)
library(noisysbmGGM)
I_fast
library(noisysbmGGM)
View(obs)
theta$pi <- c(2,1)/3
theta$pi <- c(2,1)/3
theta$w <-c(.8,.1,.9)
theta$nu0 <- c(0,1)
theta$nu <- array(0, dim = c(Q*(Q+1)/2, 2))
theta$nu[,1] <- c(4,4,4)
theta$nu[,2]<-c(1,1,1)
theta$nu
p=10
obs <- rnsbm(p, theta)
round(obs$dataMatrix, digits = 2)
obs$latentAdj
obs$latentZ
library(igraph)
G=igraph::graph_from_adjacency_matrix(obs$latentAdj)
igraph::plot.igraph(G, vertex.size=5, vertex.dist=4, vertex.label=NA, vertex.color=obs$latentZ, edge.arrow.mode=0)
plotGraphs(obs$dataMatrix, binaryTruth=obs$latentAdj)
p=30
obs <- rnsbm(p, theta)
X=obs$dataMatrix
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
res1 <- main_noisySBM(X, Qup=10, alpha=0.1,nbCores=1)
usethis::use_package(Rccp)
usethis::use_package("Rccp")
usethis::use_package("rccp")
devtools::document()
devtools::clean_dll()
devtools::install()
devtools::check()
devtools::check()
devtools::install()
devtools::check()
devtools::check()
devtools::clean_dll()
devtools::install()
devtools::clean_dll()
devtools::install()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
devtools::build(binary = TRUE)
devtools::build()
devtools::build(binary = TRUE)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
devtools::build()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
devtools::build()
